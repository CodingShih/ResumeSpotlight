人工智慧於模擬人類對話系統設計 
語言處理能力的實用系統已經出現，有些已商品化，甚至開始產業化。典型的例
子有：多語種資料庫和專家系統的自然語言介面、各種機器翻譯系統、全文信息
檢索系統、自動文摘系統等。 
    而設計一個中文為資料庫的自然語言系統，從處理文字的形式上看是由中
文字（包括標點符號等）組成的一個字元串。由字可組成詞，由詞可組成片語，
由片語可組成句子，進而由一些句子組成段、節、章、篇。就算是字形字數一樣
的一段字元串，在不同的敘述或不同的語境下，可以分析成不同的詞串、片語串
等並具有不同的解釋，一般敘述狀況下單字詞大多數都是可以根據相應的語境和
敘述的規定而得到解決的，但是另一角度來解釋，我們為了消解歧義需要極其大
量的資料庫和進行推理的規則樹，而如何將這些資料較完整地加以收集和整理出
來，並將它們存入電腦系統中去執行，這就是如何有效地處理消除歧義的辦法之
一，要完成以上功能的工作量是極為龐大且十分困難的工作。這不是少數人短時
期內可以完成的，還有待長期的、系統的工作，正是自然語言理解中的主要困難
和阻礙。 
    簡單來說自然語言的形式（字元串）與其意義之間是一種多對多的關係，
從計算機處理的角度看我們必須消除歧義，即是要把帶有潛在歧義的自然語言輸
入轉換成某種無歧義的計算機內部表示。在自然語言處理研究幾十年來一方面在
理論和方法方面取得了很多成就，但實際能處理大規模真實文本的系統研製方面，
成果並不顯著，研發出的一些系統大多數是小規模的、研究性的演示系統。 
14 
逢甲大學 e-Theses & Dissertations (104 學年度) 
人工智慧於模擬人類對話系統設計 
2.1.2  自然語言處理的主要範疇 
單字詞的分類 
    人類在對話所使用的語詞及單字，通常是連貫使用的，因此界定字詞邊界更
顯得重要，通常使用的辦法是選用能讓給定的上下文敘述上最為通順，且在文法
上無誤的一種最佳組合。在書寫上，中文也沒有詞與詞之間的邊界，同樣也需要
界定字詞邊界後找出最佳解釋，才能執行後續的回答對話處理。 
    單字詞（word）是語言系統中具有獨立語意或扮演特定語法功能，且可以自
由使用的最小語言單位。依據字詞在句法結構或語言形態上扮演的角色，經由詞
性分類賦予語句中每個字詞適當之詞性符號或標記的過程，則稱為詞性標記
（part-of-speech tagging，或稱 POS tagging）。隨著語言的不同，詞性分類的方式
也有所差異。基本上可分為動詞（verb）、名詞（noun）、形容詞（adjective）、副
詞（adverb），以及其他類別，例如：代名詞（pronoun）、介係詞（preposition）、
連接詞（conjunction）或感嘆詞（interjection）等。 
    舉個例子當有人說：『可以借我你的鉛筆嗎?  』這個句子裡我們人類能夠擷
取出關鍵單詞和主要主詞等等，關鍵的單詞是借、鉛筆，主詞是我、你，動詞是
借，名詞則是鉛筆，但電腦就需要設計字詞邊界的程式才能作出回答，用加法的
概念組合一個一個判斷比對，比對成功後再轉換主詞輸出回答文句，如電腦比對
資料庫後找到此句預設的回應句：『我把鉛筆給你，因為你需要用它。』 
詞義的消歧 
    許多字詞不單只有一個意思，因而我們需選出使句意最為通順的解釋，歧義
一直都是自然語言處理中的困難點。但是如果以文句資訊選取作為終極目標，絕
大多數的一詞多義也不是真正的問題，除非這種歧義影響了句子的結構分析（多
數詞彙歧義並不影響結構分析）。原因在於資訊選取的時候目標雖然是明確的，
15 
逢甲大學 e-Theses & Dissertations (104 學年度) 
人工智慧於模擬人類對話系統設計 
但建立的規則大多是以詞彙區分的，而不是詞義類別分類的，因此歧義在抽取的
時候有自動消失的條件。舉例說明：英語中 buy 單詞就至少有兩個解釋資料或以
上。 
表  4.  詞義的分歧 
舉例 1:buy 
I bought Fruits and vegetables for $1000.   
He isn’ t going to buy his argument. 
舉例 2:賣 
我賣你這枝筆，很便宜的。 
解釋 
購買 
相信 
解釋 
販售 
給 
賣個面子，別計較。 
句法的模糊性 
    自然語言的文法通常是模稜兩可的，針對一個句子通常可能會剖析（Parse）
出多棵剖析樹（Parse Tree），而我們必須要仰賴語意及前後文的資訊才能在其中
選擇一棵最為適合的剖析樹。 
有瑕疵的或不規範的輸入 
    例如處理時遇到各個地方不同的說話習慣和用字遣詞的不同等特殊狀況，在
處理英文、中文文句中處理拼寫、語法有可能出現翻譯上的錯誤等等。 
語言行為與計劃 
    句子常常不只有表示字面上的意思，例如「你能把球遞過來嗎」，一個好的
回答應當是動手把球遞過去，依照上下文的對照中「能」是最簡略且不錯的回答，
16 
逢甲大學 e-Theses & Dissertations (104 學年度) 
人工智慧於模擬人類對話系統設計 
但是說回答有很多種，例如「不想」或者「太遠了我拿不到」也是可以接受的回
答。還有一種問題的例子：如果你昨天有去上課嗎?，對於這提問的解答因為昨
天放假所以不用上課，如果回答「昨天放假」要比回答「我昨天沒去上課」在實
際解釋上有好很多。在對話中回答的樣式有很多種，因此需要找到最佳解釋是設
計重點，需要考慮到前面提到的變因和限制[12]。 
2.2  專家系統 
    專家系統是具有一個類似人類知識來源的資料庫和一個具有仿照人類思考
的大腦的推理引擎，專家系統被稱為基於知識資料庫的系統[13]。 
2.2.1  專家系統架構 
一個專家系統必須具備三要素： 
(一) 知識資料庫  (Knowledge-Base)   
    資料庫系統的用途主要為儲存人類所擁有的相關知識，有系統性的組職資料
或模組化資料，當電腦需要進行推論運算及或解決問題時，可以呼叫出來並使用。
資料庫包含兩種類型：第一種是知識本身所表示的意涵及分析的結果，第二種則
是人類所特有的經驗、判斷力與直覺這類的非一般知識。 
仿人類對話系統的資料庫設計上所研究的是可做選擇的知識，而傳統資料庫的內
容則是未經處理過的資料，還需經由搜索及解釋等等才能實際被使用，仿人對話
系統與這類不同。 
(二) 推論器  (Inference Mechanism)   
    推論器的是藉由演算法或決策策略來進行與知識庫內各項專門知識的推論，
依據使用者的問題來推得正確的答案。推論器的問題解決演算法可以區分為三個
層次： 
一般途徑為利用任意檢索(Blind  Search)隨意尋找可能的答案或利用啟發式檢索
17 
逢甲大學 e-Theses & Dissertations (104 學年度) 
人工智慧於模擬人類對話系統設計 
(Heuristic Search)嘗試尋找最有可能的答案。 
控制策略：有前推式(Forward  Chaining)、回溯式(Backward  Chaining)及雙向式
(Bi-directional)三種。前推式是從已知的條件中尋找答案，利用資料逐步推出結
論；回溯式則先設定目標，再證目標成立；額外的思考技巧用來處理知識庫內數
個概念間的不確定性，一般使用模糊邏輯(Fuzzy Logic)來進行演算。 
    推論器會根據知識庫、使用者的問題及複雜度來決定適用推論層次[13]。 
(三) 介面  (Interface) 
    介面的主要功能是提供相關資料的輸入與輸出，可分為三個主要部分：開發
者介面、使用者介面、系統介面；開發者介面用途在方便協助系統發展者進行知
識粹取、知識庫與推論器的編輯與修訂，並能對專家系統進行測試、記錄，並說
明系統運作的過程、狀態與結果，目前設計的系統程式還屬於此介面應用上
[14]。 
2.2.2  專家系統優缺點 
專家系統的優點有以下幾點： 
1.  可用性提高可使性能或供應量提升。 
2.  一個人類專家培養需要 20 年以上才能完成一個專家，在設計一個專家       
系統需要 40 年，但製造方面可以做出多個專家電腦系統且快速。 
3.  降低成本，即提供專業知識的成本及電腦取代人類。 
4.  減少危險如某些特定環境人類無法存活須依靠機械來作業，因此一個可
靠的專家系統就會被設計出來因為那些特定需求。 
5.  知識整合方面為有系統性、多領域專業且大量資訊，保存也完善、永久。 
專家系統的缺點有以下幾點： 
1.  缺乏因果推論知識，專家系統其實在系統中沒有真的理解知識根本原因
18 
逢甲大學 e-Theses & Dissertations (104 學年度) 
人工智慧於模擬人類對話系統設計 
和影響，僅僅只是儲存及處理並非像人類一樣完整的了解及使用。 
2.  不能推理結果當有新的狀況出現時，人類在應付突發狀況時大腦可以有
效的降低意外發生，但電腦等在完善的專家系統面對外部突發意外其實是
很難解決。 
3.  設計及研發是耗時且須要多位專家來共同合作。 
4.  基本上內部的知識資料皆為簡單的淺層知識為了方便專家系統的編程
及使用。 
表  5.  專家系統與一般電腦系統功能比較[14] 
專家系統 
一般電腦系統 
功能 
解決問題、解釋結果、進行判斷與
決策 
解決問題 
處理能力 
處理數字與符號 
處理數字 
處理問題種類 
多屬準結構性或非結構性、可處理
不確定的知識、使用於特定的領域 
多屬結構性、處理確定的
知識 
    而對話系統的架構上可以用馬可夫模型來設計，下圖 5 及下圖 6 馬可夫模型
[15][16]為對話系統選定一個狀態作為初始狀態，沿著條件觸發改變狀態，沿途
累計機率，最後停在某個狀態。 
19 
逢甲大學 e-Theses & Dissertations (104 學年度) 
人工智慧於模擬人類對話系統設計 
圖  5.  Markov Model(馬可夫模型) 
在上圖 5 中整個對話系統以馬可夫模型作設計，為具有  N  個資料的資料庫，每
一個資料為一個狀態。整個資料庫 S 加上規則條件 ɑ 構成的集合標示為對話系統
M。 
圖  6.  Markov Model State 
    在上圖 6.中，每一個圓圈內的代號表示一個狀態的「資料」，馬可夫模型的
狀態可依照使用者設定標作 S1 到 SN。N  是我們自行設定的常數，整個狀態構
成的集合標示為大寫 S  。 
20 
逢甲大學 e-Theses & Dissertations (104 學年度) 
人工智慧於模擬人類對話系統設計 
圖  7.  路徑概率 
    而每個狀態都可對應出 N  條路線，單一路線只連向某個單一一個狀態，這  N 
條路線的數值都可用機率計算及表示，系統內每條路徑機率的數值都介在  0  到 
1  ，整個 N 條路徑數值總和必為  1，如上圖 7 及下圖 8[15][16]。 
圖  8.  單一狀態概率解釋 
21 
逢甲大學 e-Theses & Dissertations (104 學年度) 
人工智慧於模擬人類對話系統設計 
      系統內每一條路徑有狀態  S𝑖  到狀態S𝑗  的路線，其表示數值標作  a𝑖𝑗，可
標作條件機率  P( s j | s i )  ，表示現在在狀態S𝑖要往狀態S𝑗。亦可套用到的狀態序
列，標作  P( q t+1 = j | q t = i )  ，全部路徑構成的集合標作 A，通常把 A 看作一
個  N×N  矩陣，在寫程式時，我們利用圖的資料結構  adjacency matrix  儲存全部
的數值。當  A  有很多數值是零則去掉一些邊，也可以改用  adjacency lists。 
2.3  樣式對比 
    在電腦等計算機程式語言中，類似 Eliza 或 Alice 等這些程式，核心使用的
原理就是樣式對比(pattern  matching)，主要在其內部有先預設一部分的對話反應
樣式(dialog patterns)，在接收到使用者的輸入對話句子後，程式對輸入的對話作
樣式比對的工作，有比對成功找到預設的回答句子，就套用該樣式的置換法則輸
出回應句子如下圖 9[10]。 
圖  9.  程式架構[10] 
22 
逢甲大學 e-Theses & Dissertations (104 學年度) 
人工智慧於模擬人類對話系統設計 
表  6.  對話樣式模型 
樣式 
預設反應 
你的名字  我是小幫手，你叫什麼名字? 
X 是 Y 
如果 X 不是 Y 會怎樣? 
我需要 XXX  XXX 對你有什麼幫助? 
你年齡多大  這是我的秘密! 
… 
……… 
2.4  字串樣式比對 
    因為人與人的對話模式使用電腦語言來設計對話文句是以字串(String)來做
表示，字串是一種特別的線性陣列，由很多個獨立「字元」串聯在一起，任何一
句話或是一個字母都可以當作一個字串，甚至輸入零個字母的字串也可以成立為
字串（空字串）。而舉例像 Funny 這個單字，當我輸入這個英文單字就是一個獨
立字串，字串在 C 語言的程式編寫中通常以符號  S  作為表示。而構成字串中的
有限字母集合又被稱為字母表(alphabet)，像 Funny  的字母表就是{‘f’, ‘u’, ‘n’, ‘n’, 
‘y’,}；而中文例子像是設定一個集合代號是運動，內部可以建構一個單詞進去如
籃球，他的字母表就是{‘藍’,  ‘球’,  }，字母表通常以符號 Σ 表示。若將字串中的
某一段截取出來當成一個新的字串，則稱新字串為舊字串的子字串(Substring)。 
S[1…k]又稱為 S 的 k-前綴(k-prefix)，同理，S[n-k+1…n]則為 S 的 k-後綴(k-suffix)，
通常我們以 S[1…k] S、S[n-k+1…n] S  表示。 
模式匹配  Pattern Matching 
    字串與其他資料結構不同的是，我們不單一去看字串裡的字母，而是將一整
個字串看成一個整體。這也使得我們有了一個一般資料結構不曾有的運用：模式
匹配(Pattern Matching)。簡單來說，給定一個主字串(Text) S[1…n]、一個模板字
23 
逢甲大學 e-Theses & Dissertations (104 學年度) 
人工智慧於模擬人類對話系統設計 
串(Pattern) P[1…m]  且  m ≤ n，問  P  是否為 T  的子字串？若是，則發生的位置
為何？例如：S1=I’m a funnyboy、S2=funny，則稱  P  發生於位移  6 處（”P” occurs 
with shift 6 in text “T”.）。 
String Matching 為程式設計中的「字串匹配」處理，假設現在設定兩個字串  S1  和 
S2  ，找出  S1  當中是否有一段字串正好是  S2  ，並且找出位置。 
註：字串匹配當中，我們通常將兩字串的象徵符號取做  S1  和  S2  ，  S1  意指       
text(一段文字或文章)  ，  S2  意指執行  pattern(單一字詞)  。可以想作是從長篇
文字  S1 之中搜索小段文字 S2  。 
單詞比對： 
    S1：  今天天氣不錯! 
    S2：  天氣 
    比對結果：今天天氣不錯! 
                                ║ ║ 
                                天氣 
圖  10.  窮舉法演算法 
24 
逢甲大學 e-Theses & Dissertations (104 學年度) 
人工智慧於模擬人類對話系統設計 
圖  11.  窮舉法演算法 
主詞抓取的設計概念： 
          S1:  我想知道等等會下雨嗎? 
          S2:  我 
        比對結果:  我想知道等等會下雨嗎? 
                            ║ 
                            我 
S1 中有一個地方出現 S2，則結果輸出比對成功。最直接的演算法就是窮舉法：
挪動  S1  ，對準  S2  的各個位置；逐一比對字元、判斷是否相等。 
窮舉方法：順序窮舉    /    排列窮舉    /    組合窮舉 
窮舉法的步驟： 
1.列出相符的所有可能解。 
2.根據條件逐一判定。 
3.滿足條件即得到一個解。 
    本論文使用的為順序窮舉法即逐一比對字元，未來可以考慮更多比對辦法設
計，通常使用到 C++中的一些參數、指令來做到比對設計的程式，後面章節會介
紹到相關用法。 
25 
逢甲大學 e-Theses & Dissertations (104 學年度) 
